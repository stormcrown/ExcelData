package ${package.Controller};

import javax.validation.Valid;
import cn.dovahkiin.util.Const;
import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.apache.shiro.authz.annotation.RequiresRoles;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import cn.dovahkiin.commons.result.PageInfo;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Controller
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    private ${table.serviceName} ${table.entityPath}Service;
    @Autowired
    public void set${table.serviceName}(${table.serviceName} ${table.entityPath}Service) {
        this.${table.entityPath}Service = ${table.entityPath}Service;
    }
    @GetMapping("/manager")
    @RequiresPermissions("/${table.entityPath}/manager")
    public String manager() {
        return "${table.entityPath}/${table.entityPath}List";
    }
    
    @PostMapping("/dataGrid")
    @RequiresPermissions("/${table.entityPath}/dataGrid")
    @ResponseBody
    public PageInfo dataGrid(${entity} ${table.entityPath}, Integer page, Integer rows, String sort,String order) {
        return super.dataGrid(${table.entityPath},${table.entityPath}Service,page,rows,sort,order);
    }
    @PostMapping("/combobox")
    @ResponseBody
    @RequiresPermissions(value = {"/videoCost/dataGrid","/customer/*","/count/bar" },logical = Logical.OR)
    public Object combobox() {
        return super.combobox(${table.entityPath}Service);
        }
    /**
     * 添加页面
     * @return
     */
    @GetMapping("/addPage")
    @RequiresPermissions("/${table.entityPath}/add")
    public String addPage(Model model,Long id) {
        return super.addPage(model,id,${table.entityPath}Service,${entity}.class);
    }
    
    /**
     * 添加
     * @param 
     * @return
     */
    @PostMapping("/add")
    @RequiresPermissions("/${table.entityPath}/add")
    @ResponseBody
    public Object add(@Valid ${entity} ${table.entityPath}) {
        return super.add(${table.entityPath},${table.entityPath}Service);
    }
    
    /**
     * 删除
     * @param ids
     * @return
     */
    @PostMapping("/delete")
    @RequiresPermissions("/${table.entityPath}/delete")
    @ResponseBody
    public Object delete(String ids) {
        return super.delete(ids,${entity}.class,${table.entityPath}Service);
    }
/**
*永久删除
* @param ids
* @return
*/
@RequiresPermissions("/${table.entityPath}/delete")
@PostMapping("/deleteForever")
@RequiresRoles(Const.Administor_Role_Name)
@ResponseBody
public Object deleteForever(String ids) {
        return super.deleteForever(ids,${table.entityPath}Service);
        }
/**
 * 恢复
 * @param ids
 * @return
 */
@PostMapping("/rollback")
@RequiresPermissions("/${table.entityPath}/add")
@ResponseBody
public Object rollback(String ids) {
        return super.rollback(ids,${entity}.class,${table.entityPath}Service);
}
    /**
     * 编辑
     * @param model
     * @param id
     * @return
     */
    @GetMapping("/editPage")
    @RequiresPermissions("/${table.entityPath}/edit")
    public String editPage(Model model, Long id) {
        return super.editPage(model,id,${entity}.class,${table.entityPath}Service);
    }
    
    /**
     * 编辑
     * @param 
     * @return
     */
    @PostMapping("/edit")
    @RequiresPermissions("/${table.entityPath}/edit")
    @ResponseBody
    public Object edit(@Valid ${entity} ${table.entityPath}) {
        return super.edit(${table.entityPath},${table.entityPath}Service);
    }
}
