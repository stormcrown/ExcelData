<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dovahkiin.mapper.CountMapper">

    <select id="count1" resultType="java.util.HashMap">
		SELECT
			<choose>
				<when test="type==0">
					DATE_FORMAT( vc.recored_date, '%Y-%m-%d' ) days,
				</when>
				<when test="type==1">
					DATE_FORMAT( vc.recored_date, '%Y-%m' ) days,
				</when>
			</choose>
			sum( vc.`consumption` ) consumption
		FROM video_cost vc
		left join optimizer opt on opt.id = vc.optimizer_id
		left join organization dem on dem.id = vc.demand_sector_id
		left join customer cus on cus.id = vc.customer_id
		left join product_type pty on pty.id = cus.product_type_id
		left join industry ind on ind.id = cus.industry_id
		left join video_type vdt on vdt.id = cus.video_type_id
		left join originality ori on ori.id = cus.originality_id
		left join photographer pho on pho.id = cus.photographer_id
		left join editor edi on edi.id = cus.editor_id
		LEFT JOIN performer per1 ON per1.id = cus.performer1_id
		LEFT JOIN performer per2 ON per2.id = cus.performer2_id
		LEFT JOIN performer per3 ON per3.id = cus.performer3_id
		LEFT JOIN true_customer tcus ON tcus.id = cus.true_customer_id
		<where>
			vc.`consumption` >0 and vc.delete_flag = 0
			and vc.recored_date BETWEEN #{recoredDate_start } and #{recoredDate_end  }
			<choose>
				<when test="userId!=null and userId!='' and optimizer == null ">and vc.created_by = #{userId}</when>
				<when test="userId==null and optimizer != null and optimizer != ''" >and opt.name = #{optimizer} </when>
				<when test="userId!=null and userId!='' and optimizer != null and optimizer != ''" >and ( opt.name = #{optimizer} or vc.created_by = #{userId} )  </when>
			</choose>
			<if test="supplierIds!=null">
				and cus.supplier_id in(
				<foreach collection="supplierIds" item="supplierId" separator=",">
					#{supplierId}
				</foreach>
				)
			</if>
			<if test="videoCost!=null" >
				<if test="videoCost.optimizer!=null and videoCost.optimizer.id!=null  " >
					and vc.optimizer_id = #{videoCost.optimizer.id }
				</if>
				<if test="videoCost.demandSector!=null and videoCost.demandSector.id!=null ">
					and vc.demand_sector_id =#{ videoCost.demandSector.id }
				</if>
				<if test="videoCost.customer!=null" >
					<if test="videoCost.customer.id!=null" >
						and vc.customer_id = #{videoCost.customer.id}
					</if>
					<if test="videoCost.customer.trueCustomer != null and videoCost.customer.trueCustomer.id != null  ">
						and cus.true_customer_id = #{videoCost.customer.trueCustomer.id }
					</if>
					<if test="videoCost.customer.originality !=null and videoCost.customer.originality.id !=null ">
						and cus.originality_id = #{ videoCost.customer.originality.id }
					</if>
					<if test="videoCost.customer.performer1!=null and videoCost.customer.performer1.id != null " >
						and (
						cus.performer1_id = #{ videoCost.customer.performer1.id }
						or cus.performer2_id = #{ videoCost.customer.performer1.id }
						or cus.performer3_id = #{ videoCost.customer.performer1.id }
						)
					</if>
					<if test="videoCost.customer.photographer !=null and videoCost.customer.photographer.id !=null  ">
						and cus.photographer_id = #{ videoCost.customer.photographer.id }
					</if>
					<if test="videoCost.customer.editor !=null and videoCost.customer.editor.id != null  " >
						and cus.editor_id = #{ videoCost.customer.editor.id }
					</if>

					<if test="videoCost.customer.industry !=null and videoCost.customer.industry.id != null  ">
						and cus.industry_id = #{ videoCost.customer.industry.id }
					</if>
					<if test="videoCost.customer.productType !=null and videoCost.customer.productType.id != null  ">
						and cus.product_type_id = #{ videoCost.customer.productType.id }
					</if>
					<if test="videoCost.customer.videoType !=null and videoCost.customer.videoType.id != null  ">
						and cus.video_type_id = #{ videoCost.customer.videoType.id }
					</if>
					<if test="videoCost.customer.priceLevel!=null and videoCost.customer.priceLevel.id!=null" >
						and cus.price_level_id = #{videoCost.customer.priceLevel.id}
					</if>
					<if test="videoCost.customer.videoVersion!=null and videoCost.customer.videoVersion.id!=null" >
						and cus.video_version_id = #{videoCost.customer.videoVersion.id}
					</if>
					<if test="videoCost.customer.supplier !=null and videoCost.customer.supplier.id != null  ">
						and cus.supplier_id = #{ videoCost.customer.supplier.id }
					</if>
				</if>
			</if>
		</where>
		GROUP BY days
	</select>

	<select id="countByModel" resultType="cn.dovahkiin.model.dto.ModelCountDto" >
		SELECT
		       <choose>
				   <when test="model=='optimizer' ">
					   opt.id, opt.name,opt.code,
				   </when>
		       		<when test="model=='TrueCustomer'">
						tcus.id,tcus.name,tcus.code,
					</when>
		       		<when test="model=='supplier'">
						sup.id,sup.name,sup.code,
					</when>
		       		<when test="model=='demandSector'">
						dem.id , dem.name,dem.code,
					</when>
				   <when test="model=='industry'">
					   ind.id , ind.name,ind.code,
				   </when>
				   <when test="model=='videoType'">
					   vdt.id , vdt.name,vdt.code,
				   </when>
				   <when test="model=='originality'">
					   ori.id , ori.name,ori.code,
				   </when>
				   <when test="model=='photographer'">
					   pho.id , pho.name,pho.code,
				   </when>
				   <when test="model=='editor'">
					   edi.id , edi.name,edi.code,
				   </when>
				   <when test="model=='performer1'">
					   per1.id , per1.name,per1.code,
				   </when>
				   <when test="model=='videoVersion'">
					   vve.id , vve.name,vve.code,
				   </when>
				   <when test="model=='priceLevel'">
					   ple.id , ple.name,ple.code,
				   </when>
				   <when test="model=='payLevel'">
					   pal.id , pal.name,pal.code,
				   </when>
			   </choose>
		sum( vc.`consumption` ) consumption,
		count(vc.id) total
		FROM video_cost vc
		left join optimizer opt on opt.id = vc.optimizer_id
		left join organization dem on dem.id = vc.demand_sector_id
		left join customer cus on cus.id = vc.customer_id
		left join product_type pty on pty.id = cus.product_type_id
		left join industry ind on ind.id = cus.industry_id
		left join video_type vdt on vdt.id = cus.video_type_id
		left join originality ori on ori.id = cus.originality_id
		left join photographer pho on pho.id = cus.photographer_id
		left join editor edi on edi.id = cus.editor_id
		LEFT JOIN performer per1 ON per1.id = cus.performer1_id
		LEFT JOIN performer per2 ON per2.id = cus.performer2_id
		LEFT JOIN performer per3 ON per3.id = cus.performer3_id
		LEFT JOIN true_customer tcus ON tcus.id = cus.true_customer_id
		LEFT JOIN supplier sup ON sup.id = cus.supplier_id
		LEFT JOIN video_version vve ON vve.id = cus.video_version_id
		LEFT JOIN price_level ple ON ple.id = cus.price_level_id
		LEFT JOIN pay_level pal ON pal.id = cus.pay_level_id
		<where>
			vc.delete_flag = 0
			and vc.recored_date BETWEEN #{recoredDate_start } and #{recoredDate_end  }
			<choose>
				<when test="countZero!=null and countZero==true ">
					and vc.`consumption` >=0
				</when>
				<otherwise>
					and vc.`consumption` >0
				</otherwise>
			</choose>
			<choose>
				<when test="userId!=null and userId!='' and optimizer == null ">and vc.created_by = #{userId}</when>
				<when test="userId==null and optimizer != null and optimizer != ''" >and opt.name = #{optimizer} </when>
				<when test="userId!=null and userId!='' and optimizer != null and optimizer != ''" >and ( opt.name = #{optimizer} or vc.created_by = #{userId} )  </when>
			</choose>
			<if test="supplierIds!=null">
				and cus.supplier_id in(
				<foreach collection="supplierIds" item="supplierId" separator=",">
					#{supplierId}
				</foreach>
				)
			</if>
			<if test="videoCost!=null" >
				<if test="videoCost.optimizer!=null and videoCost.optimizer.id!=null  " >
					and vc.optimizer_id = #{videoCost.optimizer.id }
				</if>
				<if test="videoCost.demandSector!=null and videoCost.demandSector.id!=null ">
					and vc.demand_sector_id =#{ videoCost.demandSector.id }
				</if>
				<if test="videoCost.customer!=null" >
					<if test="videoCost.customer.id!=null" >
						and vc.customer_id = #{videoCost.customer.id}
					</if>
					<if test="videoCost.customer.trueCustomer != null and videoCost.customer.trueCustomer.id != null  ">
						and cus.true_customer_id = #{videoCost.customer.trueCustomer.id }
					</if>
					<if test="videoCost.customer.originality !=null and videoCost.customer.originality.id !=null ">
						and cus.originality_id = #{ videoCost.customer.originality.id }
					</if>
					<if test="videoCost.customer.performer1!=null and videoCost.customer.performer1.id != null " >
						and (
						cus.performer1_id = #{ videoCost.customer.performer1.id }
						or cus.performer2_id = #{ videoCost.customer.performer1.id }
						or cus.performer3_id = #{ videoCost.customer.performer1.id }
						)
					</if>
					<if test="videoCost.customer.photographer !=null and videoCost.customer.photographer.id !=null  ">
						and cus.photographer_id = #{ videoCost.customer.photographer.id }
					</if>
					<if test="videoCost.customer.editor !=null and videoCost.customer.editor.id != null  " >
						and cus.editor_id = #{ videoCost.customer.editor.id }
					</if>

					<if test="videoCost.customer.industry !=null and videoCost.customer.industry.id != null  ">
						and cus.industry_id = #{ videoCost.customer.industry.id }
					</if>
					<if test="videoCost.customer.productType !=null and videoCost.customer.productType.id != null  ">
						and cus.product_type_id = #{ videoCost.customer.productType.id }
					</if>
					<if test="videoCost.customer.videoType !=null and videoCost.customer.videoType.id != null  ">
						and cus.video_type_id = #{ videoCost.customer.videoType.id }
					</if>
					<if test="videoCost.customer.priceLevel!=null and videoCost.customer.priceLevel.id!=null" >
						and cus.price_level_id = #{videoCost.customer.priceLevel.id}
					</if>
					<if test="videoCost.customer.payLevel!=null and videoCost.customer.payLevel.id!=null" >
						and cus.pay_level_id = #{videoCost.customer.payLevel.id}
					</if>
					<if test="videoCost.customer.videoVersion!=null and videoCost.customer.videoVersion.id!=null" >
						and cus.video_version_id = #{videoCost.customer.videoVersion.id}
					</if>
					<if test="videoCost.customer.supplier !=null and videoCost.customer.supplier.id != null  ">
						and cus.supplier_id = #{ videoCost.customer.supplier.id }
					</if>
				</if>
			</if>
		</where>
		GROUP BY
		<choose>
			<when test="model=='optimizer' ">
				vc.optimizer_id
			</when>
			<when test="model=='TrueCustomer'">
				tcus.id
			</when>
			<when test="model=='supplier'">
				sup.id
			</when>
			<when test="model=='demandSector'">
				dem.id
			</when>
			<when test="model=='industry'">
				ind.id
			</when>
			<when test="model=='videoType'">
				vdt.id
			</when>
			<when test="model=='originality'">
				ori.id
			</when>
			<when test="model=='photographer'">
				pho.id
			</when>
			<when test="model=='editor'">
				edi.id
			</when>
			<when test="model=='performer1'">
				per1.id
			</when>
			<when test="model=='videoVersion'">
				vve.id
			</when>
			<when test="model=='priceLevel'">
				ple.id
			</when>
			<when test="model=='payLevel'">
				pal.id
			</when>
		</choose>
		ORDER BY total desc
	</select>

	<select id="selectEffectCustomer"  resultType="cn.dovahkiin.model.dto.CustomerEffectDto" >
		select
		cus.code,cus.name,
		ple.base_price as basePrice,ple.name as priceLevelName,
		pal.base_pay as basePay,pal.name as payLevelName,
		sup.name as supplierName, sup.code as supplierCode ,
		min( cus.complete_date) as completeDate,
		COALESCE( cus.max_effect_con ,sc.default_max_effect_con,#{defaultConfig.defaultMaxEffectCon} ) as maxEffectOn,
		COALESCE( cus.pay_max_effect_con ,sc.default_pay_max_effect_con,#{defaultConfig.defaultPayMaxEffectCon} ) as
		payMaxEffectOn,
		COALESCE(cus.income_ratio, sc.default_income_ratio,#{defaultConfig.defaultIncomeRatio} ) as incomeRadio,
		COALESCE(cus.pay_ratio , sc.default_pay_ratio,#{defaultConfig.defaultPayRatio} ) as payRadio,
		COALESCE(
		DATE_ADD(min( cus.complete_date), INTERVAL sc.default_max_effect_range day),
		DATE_ADD(min( cus.complete_date), INTERVAL #{defaultConfig.defaultMaxEffectRange} day)
		) as endDate,
		sum( IF(vc.recored_date &lt;= COALESCE(
		DATE_ADD( cus.complete_date, INTERVAL sc.default_max_effect_range day),
		DATE_ADD( cus.complete_date, INTERVAL #{defaultConfig.defaultMaxEffectRange} day)
		) and vc.recored_date >= cus.complete_date, consumption, 0) ) sumAllEffCon, -- 总生命周期内消耗

		sum( IF(vc.recored_date &lt;= #{recoredDate_end} and vc.recored_date >= #{recoredDate_start}, consumption, 0) ) sumAllCon -- 查询区间内消耗

		from video_cost vc
		LEFT JOIN customer cus on vc.customer_id = cus.id and cus.delete_flag = 0
		LEFT JOIN price_level ple ON ple.id = cus.price_level_id and ple.delete_flag = 0
		LEFT JOIN pay_level pal ON pal.id = cus.pay_level_id and pal.delete_flag = 0
		LEFT JOIN supplier sup on sup.id = cus.supplier_id and sup.delete_flag = 0
		LEFT JOIN system_config sc on sc.supplier_id = sup.id
		left join optimizer opt on opt.id = vc.optimizer_id
		left join organization dem on dem.id = vc.demand_sector_id
		left join product_type pty on pty.id = cus.product_type_id
		left join industry ind on ind.id = cus.industry_id
		left join video_type vdt on vdt.id = cus.video_type_id
		left join originality ori on ori.id = cus.originality_id
		left join photographer pho on pho.id = cus.photographer_id
		left join editor edi on edi.id = cus.editor_id
		LEFT JOIN performer per1 ON per1.id = cus.performer1_id
		LEFT JOIN performer per2 ON per2.id = cus.performer2_id
		LEFT JOIN performer per3 ON per3.id = cus.performer3_id
		LEFT JOIN true_customer tcus ON tcus.id = cus.true_customer_id
		LEFT JOIN video_version vve ON vve.id = cus.video_version_id
		<where>
			vc.delete_flag = 0 and vc.`consumption` >0
			<if test="videoCost!=null" >
				<if test="videoCost.customer!=null" >
					<if test="videoCost.customer.code!=null and videoCost.customer.code!='' " >
						and cus.code = #{videoCost.customer.code}
					</if>
					<if test="supplierIds!=null">
						and cus.supplier_id in(
						<foreach collection="supplierIds" item="supplierId" separator=",">
							#{supplierId}
						</foreach>
						)
					</if>
					<if test="videoCost.customer.supplier !=null and videoCost.customer.supplier.id != null  ">
						and cus.supplier_id = #{ videoCost.customer.supplier.id }
					</if>
				</if>
			</if>
		</where>
		GROUP BY cus.code  -- ,cus.name,cus.complete_date,sc.default_max_effect_con,sc.default_income_ratio,sc.default_pay_ratio,ple.base_price -- 避免因数据异常出现错误
		having
		completeDate &lt;= #{recoredDate_end  }
		and endDate  &gt;=  #{recoredDate_start }
		and sumAllCon >0
	</select>

	<select id="selectEffectCustomerByDem" resultType="cn.dovahkiin.model.dto.CusOrgEffDto" >
		select
		       dem.code oriCode,
			   dem.name  demName,
			   cus.code cusCode,
			   cus.name cusName,
			   sum(IF(vc.recored_date &lt;=
			          COALESCE(
					   DATE_ADD(cus.complete_date, INTERVAL sc.default_max_effect_range day),
					   DATE_ADD(cus.complete_date, INTERVAL  #{defaultConfig.defaultMaxEffectRange} day)
				   ) and vc.recored_date >= cus.complete_date, consumption, 0)) sumAllEffCon, --  总生命周期内消耗
			   sum(IF(vc.recored_date &lt;= #{recoredDate_end} and vc.recored_date >= #{recoredDate_start}, consumption, 0)) sumAllCon   ,  -- 查询区间内消耗
			sum(IF(vc.recored_date &lt;= #{endDate} and vc.recored_date >= #{completeDate}, consumption, 0)) sumEffCon,
		sum(IF(vc.recored_date &lt;= #{payEndDate} and vc.recored_date >= #{completeDate}, consumption, 0)) sumEffPayCon
		from video_cost vc
				 LEFT JOIN customer cus on vc.customer_id = cus.id and cus.delete_flag = 0
				 LEFT JOIN price_level ple ON ple.id = cus.price_level_id and ple.delete_flag = 0
				 LEFT JOIN pay_level pal ON pal.id = cus.pay_level_id and pal.delete_flag = 0
				 LEFT JOIN supplier sup on sup.id = cus.supplier_id and sup.delete_flag = 0
				 LEFT JOIN system_config sc on sc.supplier_id = sup.id and sc.delete_flag = 0
				 left join organization dem on dem.id = vc.demand_sector_id
		where cus.code = #{customerCode}
		GROUP BY cus.code, dem.code
		having sumAllCon > 0
		order by cus.code, dem.code
	</select>

	<select id="selectLastDay"  resultType="cn.dovahkiin.model.dto.LastDayEffectDto" >
		select
		code,
		recoredDate ,
		@lei_jia := @lei_jia +  consumption  as sumCon
		from	(
		select
			cus.code as code,
			recored_date as recoredDate	,SUM( consumption) AS consumption
		FROM
		  (
		select tx.* from   video_cost tx
		LEFT JOIN customer ty on tx.customer_id = ty.id and ty.delete_flag = 0
		where tx.delete_flag = 0 and ty.code =  #{customerCode} and tx.recored_date >= #{completeDateLimit}
		ORDER BY recored_date -- 先排好序
		)
		  vc
				 LEFT JOIN customer cus on vc.customer_id = cus.id and vc.delete_flag = 0
				 LEFT JOIN supplier sup on sup.id = cus.supplier_id and sup.delete_flag = 0
				 LEFT JOIN system_config sc on sc.supplier_id = sup.id
				 left join optimizer opt on opt.id = vc.optimizer_id
				 left join organization dem on dem.id = vc.demand_sector_id
				 left join product_type pty on pty.id = cus.product_type_id
				 left join industry ind on ind.id = cus.industry_id
				 left join video_type vdt on vdt.id = cus.video_type_id
				 left join originality ori on ori.id = cus.originality_id
				 left join photographer pho on pho.id = cus.photographer_id
				 left join editor edi on edi.id = cus.editor_id
				 LEFT JOIN performer per1 ON per1.id = cus.performer1_id
				 LEFT JOIN performer per2 ON per2.id = cus.performer2_id
				 LEFT JOIN performer per3 ON per3.id = cus.performer3_id
				 LEFT JOIN true_customer tcus ON tcus.id = cus.true_customer_id
				 LEFT JOIN video_version vve ON vve.id = cus.video_version_id
				 LEFT JOIN price_level ple ON ple.id = cus.price_level_id and ple.delete_flag = 0
				LEFT JOIN pay_level pal ON pal.id = cus.pay_level_id and pal.delete_flag = 0
		<where>
			vc.delete_flag = 0 and  cus.code = #{customerCode} and vc.`consumption` >0
		</where>
		GROUP BY recored_date
		ORDER BY recored_date
		) t1 ,
		(SELECT @lei_jia := 0) lei_jia
		GROUP BY recoredDate
		HAVING sumCon &gt; #{maxValue}
		LIMIT 1
	</select>

	<select id="selectEveryDayCon" resultType="cn.dovahkiin.model.dto.DayEffectDto" >
		select
				cus.code as code,
		       vc.recored_date recoredDate,
		       sum(vc.consumption) consumptionEffect
							  from video_cost vc
									   LEFT JOIN customer cus on vc.customer_id = cus.id and cus.delete_flag = 0
									   LEFT JOIN supplier sup on sup.id = cus.supplier_id and sup.delete_flag = 0
									   LEFT JOIN system_config sc on sc.supplier_id = sup.id
									   left join optimizer opt on opt.id = vc.optimizer_id
									   left join organization dem on dem.id = vc.demand_sector_id
									   left join product_type pty on pty.id = cus.product_type_id
									   left join industry ind on ind.id = cus.industry_id
									   left join video_type vdt on vdt.id = cus.video_type_id
									   left join originality ori on ori.id = cus.originality_id
									   left join photographer pho on pho.id = cus.photographer_id
									   left join editor edi on edi.id = cus.editor_id
									   LEFT JOIN performer per1 ON per1.id = cus.performer1_id
									   LEFT JOIN performer per2 ON per2.id = cus.performer2_id
									   LEFT JOIN performer per3 ON per3.id = cus.performer3_id
									   LEFT JOIN true_customer tcus ON tcus.id = cus.true_customer_id
									   LEFT JOIN video_version vve ON vve.id = cus.video_version_id
									   LEFT JOIN price_level ple ON ple.id = cus.price_level_id and ple.delete_flag = 0
										LEFT JOIN pay_level pal ON pal.id = cus.pay_level_id and pal.delete_flag = 0
		<where>
			vc.delete_flag = 0 and cus.code = #{customerCode} and vc.recored_date>=#{completeDateLimit} 	and vc.`consumption` >0
			and vc.recored_date BETWEEN #{recoredDate_start } and #{recoredDate_end  }
			<if test="recoredDate_last!=null" >
				and vc.recored_date &lt;=#{recoredDate_last}
			</if>
		</where>
		GROUP BY cus.code,vc.recored_date
							  ORDER BY recored_date
	</select>

</mapper>
